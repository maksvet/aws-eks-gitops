name: Build and Deploy via Flux

on:
  push:
    branches: [main]
    paths:
      - "app/**"
      - ".github/workflows/ci-workflow.yaml"
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/sample-app

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: "sarif"
          output: "trivy-results.sarif"
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
        if: always()

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update Flux manifest and create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a new branch
          BRANCH_NAME="update-image-${{ github.sha }}"
          git checkout -b $BRANCH_NAME

          cd clusters/eks-cluster-lab/demo
          yq -i '.spec.template.spec.containers[0].image = "${{ env.IMAGE_NAME }}:${{ github.sha }}"' sample-app-deployment.yaml

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Only continue if there are changes
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git add sample-app-deployment.yaml
          git commit -m "chore: update image tag to ${{ github.sha }}"
          git push origin $BRANCH_NAME

          # Create pull request using GitHub CLI
          gh pr create \
            --title "Deploy image ${{ github.sha }}" \
            --body "Automated deployment of new image version: \`${{ env.IMAGE_NAME }}:${{ github.sha }}\`" \
            --base main \
            --head $BRANCH_NAME
